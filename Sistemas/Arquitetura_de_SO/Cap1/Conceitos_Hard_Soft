Parte I - Conceitos de Hardware e Software

Exercício 1. Quais são as unidades funcionais de um sistema computacional?

	As unidades funcionais são processador, memoria principal e dispositivos de entrada.

Exercício 2. Quais os componentes de um processador e quais suas funções?

	O processador é composto por unidade de controle, unidade lógica e aritmética e registradores.
	Unidade de controle: gerencia todas as atividades de todos os componentes do computador.
	Unidade lógica e aritmética: responsável por operações lógicas. Registradores: sua função
	principal é armazenar dados temporariamente.

Exercício 3. Como a memória principal de um computador é organizada?

	Ela é organizada em células onde cada célula possui um número determinado de bits.

Exercício 4. Descreva os ciclos de leitura e gravação da memória principal.

	No ciclo de leitura, a CPU armazena no MAR, o endereço da célula a ser lida e gera um sinal de
	controle para a memória principal, indicado que uma operação de leitura deve ser realizada. O
	conteúdo da célula, identificada pelo endereço contido no MAR, é transferido para o MBR. No
	ciclo de gravação, a CPU armazena no MAR, o endereço da célula que será gravada e armazena
	no MBR, a informação que deverá ser gravada. A CPU gera um sinal de controle para a memória
	principal, indicado que uma operação de gravação deve ser realizada e a informação contida no
	MBR é transferida para a célula de memória endereçada pelo MAR.

Exercício 5. Qual o número máximo de células endereçadas em arquiteturas com MAR de 16, 32 e 64 bits?

	MAR=16 bits número máx. células = 216
	MAR=32 bits número máx. células = 232
	MAR=64 bits número máx. células = 264

Exercício 6. O que são memórias voláteis e não voláteis?

	Memória voláteis são as que requerem energia para manter a informação armazenada.
	Memórias não voláteis são aquelas que guardam todas as informações mesmo quando não
	estiverem a receber alimentação. Como exemplo memórias ROM e FLASH.

Exercício 7. Conceitue memória cache e apresente as principais vantagens no seu uso.

	A memória cache é igual a volátil e tem alta velocidade, o tempo de acesso ao dado é muito
	menor se compararmos a memória RAM. O propósito do uso da memória cache é minimizar a
	disparidade existente entre a velocidade com que o processador executa instruções e a
	velocidade com que os dados são acessados na memória principal.

Exercício 8. Qual a importância do princípio da localidade na eficiência da memória cache?

	Os barramentos processador-memória são de curta extensão e alta velocidade para que seja
	otimizada a transferência de informação entre processadores e memórias. Os barramentos de
	E/S possuem maior extensão, são mais lentos e permitem a conexão de diferentes dispositivos.
	O barramento de backplane tem a função de integrar os dois.

Exercício 9. Quais o benefício de uma arquitetura de memória cache com múltiplos níveis?

	Para o cache quanto maior a capacidade, maior a probabilidade de encontrar nele uma cópia do
	dado que se procura. Por outro lado, quanto maior o cache, maior a latência, pois mais tempo
	se leva para encontrar alguma coisa que nele esteja armazenada. Asolução foi hierarquizar o
	cache. Criou-se então dois níveis de cache, ambos no interior da UCP, o primeiro um cache
	pequeno, rapidíssimo, latência curta devido ao menor tamanho, bem junto ao âmago da UCP e
	o segundo, entre o primeiro e o mundo exterior, um cache bem maior, portanto aumentando a
	probabilidade de encontrar nele uma cópia do dado desejado, porém de maior latência.

Exercício 10. Quais as diferenças entre a memória principal e a memória secundária?

	A memória principal é a memória RAM no qual todos os processos passam por ela, ela faz a
	troca de informações com a CPU e quando desligamos nosso computador perdemos tudo.
	Memória secundaria (HD,CD-ROM,DISQUETE) que armazena dados, e quando desligamos
	nosso computador os dados ficam guardados prontos para o acesso novamente.

Exercício 11. Diferencie as funções básicas dos dispositivos de E/S.

	Os dispositivos de E/S podem ser divididos em duas categorias: os que são utilizados como
	memória secundária e os que servem para a interface usuário-máquina. Os dispositivos
	utilizados como memória secundária caracterizam-se por ter capacidade de armazenamento
	bastante superior ao da memória principal. Seu custo é relativamente baixo, porém o tempo de
	acesso à memória secundária é bem superior ao da memória principal. Outros dispositivos têm
	como finalidade a comunicação usuário-máquina, como teclados, monitores de vídeo,
	impressoras entre outros.

Exercício 12. Caracterize os barramentos processador-memória, E/S e backplane.

	Os barramentos Processador-Memória são de curta extensão e alta velocidade para que seja
	otimizada a transferência de informação entre processadores e memórias. Os barramentos de
	E/S possuem maior extensão, são mais lentos e permitem a conexão de diferentes dispositivos.
	Enquanto o barramento de backplane tem a função de integrar os dois barramentos.

Exercício 13. Como a técnica de pipelining melhora o desempenho dos sistemas computacionais?

	Deixando que o processador execute múltiplas instruções paralelamente em níveis diferentes.

Exercício 14. Compare as arquiteturas de processadores RISC e CISC.

	A arquitetura RISC (Reduced Instruction Set Computer), é uma linha de arquitetura de
	computadores que favorece um conjunto simples e pequeno de instruções que levam
	aproximadamente a mesma quantidade de tempo para serem executadas. A maioria dos
	microprocessadores modernos são RISCs. O tipo de microprocessador mais utilizado em
	Desktops, é mais CISC do que RISC. As caraterísticas da arquitetura RISC são: conjunto
	reduzido e simples de instruções; formatos simples e regulares de instruções; operandos
	sempre em registros; modos simples de endereçamento à memória; uma operação elementar
	por ciclo máquina e o uso do pipeline. Já o CISC (Complex Instruction Set Computer) é uma
	linha de arquitetura de processadores capaz de executar centenas de instruções complexas
	diferentes sendo, assim, extremamente versátil. Exemplos de processadores CISC são os 386 e
    os 486 da Intel. Os processadores baseados na computação de conjunto de instruções
	complexas contêm um micro programação, ou seja, um conjunto de códigos de instruções que
	são gravados no processador, permitindo-lhe receber as instruções dos programas e executálas,
    utilizando as instruções contidas no seu micro programação.

Exercício 15. Conceitue a técnica de benchmark e como é sua realização.

	O Benchmark permite uma análise de desempenho comparativa entre sistemas
	computacionais. Neste método, um conjunto de programas é executado em cada sistema
	avaliado e o tempo de execução comparado. A escolha dos programas deve ser criteriosa para
	refletir os diferentes tipos de aplicação.

Exercício 16. Por que o código-objeto gerado pelo tradutor ainda não pode ser executado?

	Pois ele fica esperando por alguma sub-rotinas externas, pois o tradutor não tem pode associar
	o programa principal às sub-rotinas chamadas. Esta função é desempenhada através do linker.

Exercício 17. Por que a execução de programas interpretados é mais lenta que a programas compilados?

	Como não existe a geração de um código executável, as instruções de um programa devem
	ser traduzidas toda vez que este for executado. Um exemplo e o Java que passa pela VM antes
	de ser executada pois antes tem que ser interpretada e compilada.

Exercício 18. Quais as funções do linker?

	Ele é o responsável por fazer a ligação entre os módulos do programa, para gerar um único
	executável. Também adiciona ao código-objeto bibliotecas e funções de outros programas além
	de inserir código para lidar com o Sistema Operacional. O linker resolve as pendências de
	rótulos em partes do programa. É nessa etapa que o código-objeto é traduzido para a
	linguagem de máquina.

Exercício 19. Qual a principal função do loader?

	O loader, também chamado carregador, é o utilitário responsável por colocar fisicamente na
	memória um programa para execução.

Exercício 20. Quais as facilidades oferecidas pelo depurador?

	O depurador oferece ao usuário recursos como acompanhar a execução de um programa
	instrução por instrução; possibilitar a alteração e visualização do conteúdo de variáveis;
	implementar pontos de parada dentro do programa (breakpoint), de forma que, durante a
	execução, o programa para nesses pontos e especificar que, toda vez que o conteúdo de uma
	variável for modificado, o programa envie uma mensagem (watchpoint).


Referências úteis:

http://www.hardware.com.br/termos/memoria-cache
http://www.clubedohardware.com.br/artigos/Como-o-Cache-de-Memoria-Funciona/1410/4
https://pt.wikipedia.org/wiki/Pipeline_(hardware)
www.infoescola.com/informatica/memoria-cache
